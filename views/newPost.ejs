<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
</head>
<style>
@import url('https://fonts.googleapis.com/css2?family=Comfortaa&display=swap');

body {
  background: #e0e0e0;
  
}


.login {
  width: 360px;
  padding: 8% 0 0;
  margin: auto;
  font-family: 'Comfortaa', cursive;
  border-radius: 50px;
}
.form h1{
    font-weight: 100;
    color: #822BFD;
}
.form {
  position: absolute;
  left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  z-index: 1;
  background: #FFFFFF;
  border-radius: 10px;
  max-width: 600px;
  width: 40vmax;
  margin: 0 auto 100px;
  padding: 45px;
  text-align: center;
  border-radius: 50px;
  background: #e0e0e0;
  box-shadow:  -11px 11px 22px #bebebe, 11px -11px 22px #ffffff;
}
.form ul li{
    text-align: left;
    font-size: .7vmax;
    margin-bottom: 5px;
}
.form small{
    display: block;
    margin-top: 2vmax;
    color: #822BFD;
    font-size: .9vmax;
    cursor: pointer;
}
.form input {
  outline: 0;
  background: #e0e0e0;
  width: 100%;
  border: 0;
  border-radius: 5px;
  margin: 0 0 15px;
  padding: 15px;
  box-sizing: border-box;
  font-size: 14px;
  font-family: 'Comfortaa', cursive;
  border-bottom:1px solid #822BFD;
}

.form input:focus {
  background: #e0e0e0;
}


.form button {
  font-family: 'Comfortaa', cursive;
  margin-top: 20px;
  text-transform: uppercase;
  outline: 0;
  background-color: #822BFD;
  /* border: 2px solid #822BFD; */
  width: 100%;
  border: 0;
  border-radius: 5px;
  padding: 15px;
  color: #fbfbfb;
  font-size: 14px;
  font-weight: 900;
  -webkit-transition: all 0.3 ease;
  transition: all 0.3 ease;
  cursor: pointer;
}

.form button:active {
  background: #822BFD;
}
.drop-zone {
  max-width: 200px;
  height: 200px;
  padding: 25px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-family: "Quicksand", sans-serif;
  font-weight: 500;
  font-size: 20px;
  cursor: pointer;
  color: #822BFD;
  border: 4px dashed #822BFD;
  border-radius: 10px;
}

.drop-zone--over {
  border-style: solid;
}

.drop-zone__input {
  display: none;
}

.drop-zone__thumb {
  width: 100%;
  height: 100%;
  border-radius: 10px;
  overflow: hidden;
  background-color: #cccccc;
  background-size: cover;
  position: relative;
}

.drop-zone__thumb::after {
  content: attr(data-label);
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 5px 0;
  color: #ffffff;
  background: rgba(0, 0, 0, 0.75);
  font-size: 14px;
  text-align: center;
}

</style>
<body>
    
      <div class="login">
        <div id="signup" class="form">
          <h1>Create Your Post</h1>
          <form action="/createPost" method="post"  enctype="multipart/form-data" class="login-form">
            <input type="text" placeholder="Title" name="title" required  />
            <input type="text" placeholder="Description" name="body" required  />
            
            <div class="drop-zone">
              <span class="drop-zone__prompt">Drop file here or click to upload</span>
              <input type="file" name="image" required class="drop-zone__input">
            </div>
            <button>Create Post</button>
          </form>  
        </div>
      </div>
    <% include Partial/navigation.ejs %>

      <script>

document.querySelectorAll(".drop-zone__input").forEach((inputElement) => {
  const dropZoneElement = inputElement.closest(".drop-zone");

  dropZoneElement.addEventListener("click", (e) => {
    inputElement.click();
  });

  inputElement.addEventListener("change", (e) => {
    if (inputElement.files.length) {
      updateThumbnail(dropZoneElement, inputElement.files[0]);
    }
  });

  dropZoneElement.addEventListener("dragover", (e) => {
    e.preventDefault();
    dropZoneElement.classList.add("drop-zone--over");
  });

  ["dragleave", "dragend"].forEach((type) => {
    dropZoneElement.addEventListener(type, (e) => {
      dropZoneElement.classList.remove("drop-zone--over");
    });
  });

  dropZoneElement.addEventListener("drop", (e) => {
    e.preventDefault();

    if (e.dataTransfer.files.length) {
      inputElement.files = e.dataTransfer.files;
      updateThumbnail(dropZoneElement, e.dataTransfer.files[0]);
    }

    dropZoneElement.classList.remove("drop-zone--over");
  });
});

function updateThumbnail(dropZoneElement, file) {
  let thumbnailElement = dropZoneElement.querySelector(".drop-zone__thumb");

  if (dropZoneElement.querySelector(".drop-zone__prompt")) {
    dropZoneElement.querySelector(".drop-zone__prompt").remove();
  }

  if (!thumbnailElement) {
    thumbnailElement = document.createElement("div");
    thumbnailElement.classList.add("drop-zone__thumb");
    dropZoneElement.appendChild(thumbnailElement);
  }

  thumbnailElement.dataset.label = file.name;

  if (file.type.startsWith("image/")) {
    const reader = new FileReader();

    reader.readAsDataURL(file);
    reader.onload = () => {
      thumbnailElement.style.backgroundImage = `url('${reader.result}')`;
    };
  } else {
    thumbnailElement.style.backgroundImage = null;
  }
}

      </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</body>
</html>